
  <div class="layui-card-body" class="layui-form">
    <table id="demo" lay-filter="test"></table>
  </div>
</div>

<div id="edit_many" style="display:none;">
  <form class="layui-form" action="" lay-filter="article_edit_form">
    <div class="layui-form-item" style="width:250px">
      <label class="layui-form-label">所属栏目</label>
      <div class="layui-input-block">
        <select name="typeid" lay-verify="required">
          <?php foreach ($types as $k => $v) : ?>
            <?php echo "<option value='{$v['typeid']}' >{$v['typename']}</option>" ?>
          <?php endforeach ?>
        </select>
      </div>
    </div>

    <div class="layui-form-item" style="width:250px">
      <label class="layui-form-label">文章作者</label>
      <div class="layui-input-block">
        <select name="author" lay-verify="required">
          <?php foreach ($authors as $k => $v) : ?>
            <?php echo "<option value='{$v['uid']}'>{$v['pen_name']}</option>" ?>
          <?php endforeach ?>
        </select>
      </div>
    </div>
    <div class="layui-form-item">
      <label class="layui-form-label">是否推荐</label>
      <div class="layui-input-block">
        <input type="checkbox" name="is_recom" title="推荐">
      </div>
    </div>
    <div class="layui-form-item">
      <label class="layui-form-label">是否隐藏</label>
      <div class="layui-input-block">
        <input type="checkbox" name="is_hidden" title="隐藏">
      </div>
    </div>


    <div class="layui-form-item">
      <div class="layui-input-block" style="margin-left:0;text-align: center;">
        <button class="layui-btn layui-btn-normal" lay-submit lay-filter="formDemo">立即提交</button>
      </div>
    </div>
  </form>
</div>

<!-- 模板 -->
<script type="text/html" id="left-toolbar">
  <div class="layui-table-tool-temp">
    <div class="layui-inline" lay-event="add"><i class="layui-icon layui-icon-add-1"></i></div>
    <div class="layui-inline" lay-event="update"><i class="layui-icon layui-icon-edit"></i></div>
    <div class="layui-inline" lay-event="delete"><i class="layui-icon layui-icon-delete"></i></div>
    <div style="width:200px;display:inline-block">
      <select name="type" lay-filter="type_select">
        <option value="-1">选择栏目</option>
        <?php foreach ($types as $k => $v) : ?>
          <option value="<? echo $v['typeid'] ?>">
            <? echo $v['typename'] ?>
          </option>
        <?php endforeach ?>
      </select>
    </div>

  </div>
</script>
<script type="text/html" id="hidden-cell">
  <input type='checkbox' lay-skin='switch' lay-filter='is_hidden' data-aid={{d.aid}} value={{d.is_hidden}} {{ parseInt(d.is_hidden)?'checked':''}}>
</script>
<script type="text/html" id="tool-cell">
  <div class="tool-cell">

    <a class="layui-btn  layui-btn-sm" lay-event="detail" href="/index.php?path=content&aid={{d.aid}}" target="_blank">
      <i class="layui-icon layui-icon-website"></i>
    </a>
    <a class="layui-btn  layui-btn-normal layui-btn- layui-btn-sm" lay-event="edit" href="/admin.php?path=admin&cpn=article_edit&aid={{d.aid}}" target="_blank">
      <i class="layui-icon layui-icon-edit"></i>
    </a>
    <a class="layui-btn  layui-btn-danger layui-btn-sm" lay-event="del">
      <i class="layui-icon layui-icon-delete"></i>
    </a>
  </div>
</script>
<script type="text/html" id="sort-cell">
  <input type='text' class='layui-input' style="text-align:center;padding-left:0;" lay-event="sort" value="{{ d.sort_order}}">
</script>

<script>
  var options = {
    elem: '#demo',
    // height: 380,
    // height: 312,
    //数据接口
    url: '/admin.php?path=admin&api=article_list',
    //开启分页
    page: {
      layout: ['limit', 'count', 'prev', 'page', 'next', 'skip'],
      groups: 3,
      limits: [10, 20, 50],
      limit: 50
    },
    // 开启头部工具栏
    toolbar: '#left-toolbar',
    size: 'lg',
    done: function(data) {
      function type_select(data) {

      }
      console.log(data);
    },
    //表头
    cols: [
      [{
          type: 'checkbox',
        },
        {
          field: 'aid',
          title: 'aid',
          width: 70,
          align: 'center',
          sort: true,
        },
        {
          field: 'title',
          title: '标题',
          // width: 350
        },
        {
          field: 'typename',
          title: '栏目',
          sort: true,
          align: 'center',
          width: 130,


        },
        {
          field: 'update_time',
          title: '更新时间',
          align: 'center',
          sort: true,
          width: 120,

        },
        {
          field: 'is_hidden',
          title: '隐藏',
          align: 'center',
          width: 80,

          toolbar: '#hidden-cell',

          // templet: function(d) {
          //   var is_checked = parseInt(d.is_hidden) ? "checked" : "";
          //   var is_hidden = "<input type='checkbox' lay-skin='switch' " + is_checked + ">";
          //   // var is_hidden = "<input type='checkbox' lay-skin='switch' checked>";
          //   return is_hidden;
          // }
        }, {
          field: 'sort_order',
          title: '排序',
          width: 80,
          align: 'center',
          edit: 'text',
          sort: true,

          // toolbar: '#sort-cell',

          // sort: true,
          // templet: function(d) {
          //   var sort_order = parseInt(d.sort_order);
          //   // var is_hidden = "<input type='text'  value='" + sort_order+ "'>";
          //   var is_hidden = '<input type = "text" name = "sort_order"       autocomplete = "off"       class = "layui-input sort-order" value="' + sort_order + '">';
          //   // var is_hidden = "<input type='checkbox' lay-skin='switch' checked>";
          //   return is_hidden;
          // }
        }, {
          // 操作行
          //这里的toolbar值是模板元素的选择器
          title: '操作',
          fixed: 'right',
          width: 200,
          align: 'center',
          toolbar: '#tool-cell'
        }
      ]
    ],

  };
  layui.use(['table', 'form'], function() {
    var table = layui.table;
    var form = layui.form;
    //第一个实例
    table.render(options);
    // 监听头部工具条
    table.on('toolbar(test)', function(obj) {
      var checkStatus = table.checkStatus(obj.config.id);
      switch (obj.event) {
        case 'add':
          // layer.msg('添加');
          // console.log(obj);
          location.href = "/admin.php?path=admin&cpn=article_add"
          break;
        case 'delete':
          var data = table.checkStatus('demo').data;
          if (data.length == 0) {
            return layer.msg('请选择要删除的文章');
          }
          var aids = [];
          data.forEach(v => {
            aids.push(v.aid);
          })
          aids = aids.join(',')

          function handle(data) {
            layer.msg(data.msg)
            // console.log(data);
            if (data.code == 0) {
              setTimeout(() => {
                table.reload('demo');
              }, 1000);
            }
          }
          layer.confirm('确定要批量删除吗', function(index) {
            // obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
            layer.close(index);
            //向服务端发送删除指令
            // console.log(data);
            fetch('/admin.php?path=admin&api=article_delete&aid=' + aids, {
                method: 'get'
              })
              .then(data => data.json())
              .then(data => handle(data));
          });
          break;
        case 'update':
          // layer.msg('编辑');
          // var data = table.checkStatus('demo').data;
          // var aids = [];
          // data.forEach(v => {
          //   aids.push(v.aid);
          // })
          // aids = aids.join(',')
          // console.log(aids);
          var data = table.checkStatus('demo').data;
          if (data.length == 0) {
            return layer.msg('请选择要修改的文章');
          }
          layer.confirm('确定要批量修改吗', function(index) {
            layer.close(index);
            var index = layer.open({
              type: 1,
              title: '批量编辑',
              shade: false,
              content: layui.$('#edit_many')
            });
            var aids = [];
            data.forEach(v => {
              aids.push(v.aid);
            })
            aids = aids.join(',')
            // 监听提交按钮事件
            form.on('submit(formDemo)', function(data) {

              var form_data = form.val('article_edit_form');
              form_data.aid = aids;

              function handle(data) {
                console.log(data);
                layer.msg(data.msg);
                if (data.code == 0) {
                  setTimeout(() => {
                    layer.close(index);
                    table.reload('demo');
                  }, 1000);
                }
              }
              fetch('/admin.php?path=admin&api=article_edit', {
                  method: 'post',
                  body: JSON.stringify(form_data),
                  headers: {
                    // json格式的参数
                    'Content-type': 'application/json',
                  },
                })
                .then(data => data.json())
                .then(data => handle(data));
              return false;
            });


          });


          break;
      };
    });
    //监听工具条 
    table.on('tool(test)', function(obj) { //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
      var data = obj.data; //获得当前行数据
      var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
      var tr = obj.tr; //获得当前行 tr 的 DOM 对象（如果有的话）

      if (layEvent === 'detail') { //查看
        //do somehing
        // layer.msg(data)
        // console.log(obj);
      } else if (layEvent === 'del') { //删除
        function handle(data) {
          layer.msg(data.msg)
          console.log(data);
          if (data.code == 0) {
            obj.del()
          }
        }
        layer.confirm('真的删除行么', function(index) {
          // obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
          layer.close(index);
          //向服务端发送删除指令
          // console.log(data);
          fetch('/admin.php?path=admin&api=article_delete&aid=' + data.aid, {
              method: 'get'
            })
            .then(data => data.json())
            .then(data => handle(data));
        });
      } else if (layEvent === 'edit') { //编辑
        // console.log(111);

      } else if (layEvent === 'LAYTABLE_TIPS') {
        layer.alert('Hi，头部工具栏扩展的右侧图标。');
      } else if (layEvent === 'sort') {
        layer.alert(layEvent)
        console.log(data);
      } else if (layEvent === 'hidden') {
        layer.alert(layEvent)
        console.log(data);
      }
    });
    // 监听排序编辑
    table.on('edit(test)', function(obj) {
      var data = obj.data; //获得当前行数据
      function handle(d) {
        layer.msg(d.msg)
        // 删除失败 刷新一下
        table.reload('demo');
      }
      fetch('/admin.php?path=admin&api=article_sort&aid=' + data.aid + '&sort_order=' + obj.value, {
          method: 'get'
        })
        .then(data => data.json())
        .then(data => handle(data))

    })
    // 监听开关
    form.on('switch()', function(obj) {
      var el = obj.elem;
      var othis = obj.othis[0];
      var value = el.value;
      var aid = el.dataset.aid;

      var data = {
        aid: aid,
        is_hidden: value
      }

      function handle(d) {
        layer.msg(d.msg);
        if (d.code == 0) {
          el.value = d.is_hidden;
        } else {
          // table.reload('demo')
        }
      }
      // console.log(obj.elem.dataset.aid);
      fetch('/admin.php?path=admin&api=article_toggle_hidden&aid=' + aid + '&is_hidden=' + value, {
          method: 'get',
        })
        .then(data => data.json())
        .then(data => handle(data));
    })
    // 监听下拉选择栏目
    form.on('select(type_select)', function(data) {
      console.log(data);
      options.url = '/admin.php?path=admin&api=article_list&typeid=' + data.value;
      table.render(options);
    });

  });
</script>

<style>
  .tool-cell .layui-btn .layui-icon {
    margin-right: 0;
  }
  .layui-card-header i {
    color: white;
  }
  .sort-order {
    text-align: center;
    padding-left: 0;
  }

  .layui-table-edit {
    text-align: center;
  }

  #edit_many {
    padding: 15px 15px 0;
  }

  .layui-form-label {
    padding-left: 0;
    width: 60px;
  }

  .layui-input-block {
    margin-left: 90px;
  }
</style>